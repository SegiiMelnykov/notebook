name: Build and Deploy Api Docker Image

on:
  push:
    paths:
      - 'api/**'
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Cache configuration
    env:
      CACHE_NAME: cache-node-modules

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Restore Node.js modules cache
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-notebook-api-${{ hashFiles('api/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-notebook-api-

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./api
        run: npm install --frozen-lockfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=me1a/notebook-api
          TAG=$(date +%Y%m%d%H%M%S)
          echo "Building image $IMAGE_NAME:$TAG"
          docker build -t $IMAGE_NAME:$TAG -f ./api/Dockerfile.pub ./api
          docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest
          echo "Pushing image $IMAGE_NAME:$TAG"
          docker push $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:latest

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DIGITALOCEAN_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DIGITALOCEAN_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy application
        run: |
          ssh -T root@${{ secrets.DIGITALOCEAN_HOST }} << 'EOF'
            cd /var/www/test
            docker-compose -f docker-compose.pub.yml down
            docker-compose -f docker-compose.pub.yml pull
            docker-compose -f docker-compose.pub.yml up -d
          EOF

      # Save Node.js modules cache
      - name: Save Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-notebook-api-${{ hashFiles('api/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-notebook-api-
